<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.kiosbankingbe.mapper.ScreenMapper">
    <select id="get" parameterType="com.example.kiosbankingbe.model.request.ScreenRequest"
            resultType="com.example.kiosbankingbe.model.response.ScreenResponse">
        SELECT *, background_image as image FROM ui_info

        <where>
            <if test="name != null and name !='' ">
                and name ILIKE CONCAT('%' || #{name} || '%')
            </if>
        </where>

        ORDER BY start_time, start_date ASC

        <if test="limit >0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>

    <select id="countScreen" parameterType="com.example.kiosbankingbe.model.request.ScreenRequest" resultType="Integer">
        select count(*) from ui_info
        <where>
            <if test="name != null and name !='' ">
                and name ILIKE CONCAT('%' || #{name} || '%')
            </if>
        </where>
    </select>

    <select id="create" parameterType="com.example.kiosbankingbe.model.request.ScreenRequest"
            resultType="com.example.kiosbankingbe.model.response.ScreenResponse">
        INSERT INTO ui_info(
            "name",
            background_image,
            start_date,
            end_date,
            start_time,
            end_time,
            create_date
        )VALUES(
            #{name},
            #{image},
            #{startDate},
            #{endDate},
            #{startTime},
            #{endTime},
            NOW()
        )
        RETURNING *;
    </select>

    <update id="update" parameterType="com.example.kiosbankingbe.model.request.ScreenRequest">
        UPDATE ui_info
        SET
            "name" = #{name},
            background_image = #{image},
            start_date = #{startDate},
            end_date = #{endDate},
            start_time = #{startTime},
            end_time = #{endTime},
            edit_date = NOW()
        WHERE id = #{id}::uuid
     </update>

    <delete id="delete" parameterType="com.example.kiosbankingbe.model.request.ScreenRequest">
        DELETE FROM ui_info
        WHERE id = #{id}::uuid
     </delete>

    <select id="checkDateExisted" parameterType="com.example.kiosbankingbe.model.request.ScreenRequest"
            resultType="Integer">
        SELECT COUNT(*)
        FROM ui_info
        WHERE DATE(start_date) between #{startDate} and #{endDate}
            or DATE(end_date) between #{startDate} and #{endDate}
    </select>

    <select id="checkTimeExisted" parameterType="com.example.kiosbankingbe.model.request.ScreenRequest"
            resultType="Integer">
        SELECT count(*)
        FROM ui_info
        WHERE ( start_time BETWEEN #{startTime} AND #{endTime}
        OR end_time BETWEEN #{startTime} AND #{endTime} ) and id != #{id}::uuid
    </select>
</mapper>